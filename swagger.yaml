swagger: "2.0"
info:
  version: 1.0.0
  title: ":LBIS Routing Plan API"
  description: LBIS Routing Plan API v1
  termsOfService: http://swagger.io/terms/
  contact:
    name: Jumbo
    email: soopparerk@ecartstudio.com
    url: http://soopparerk.ecartstudio.com
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
# host: jumboz.net
# basePath: /api/v1
# schemes:
#   - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /plans:
    get:
      tags:
        - Plan
      summary: Get plan for users
      parameters:
        - name: name
          in: query
          description: plan's name
          required: false
          type: string
        - name: planType
          in: query
          description: (daily,weekly,monthly)
          required: false
          type: string
        - name: ownerId
          in: query
          description: plan's owner
          required: false
          type: integer
        - name: categoryId
          in: query
          description: sub category id
          required: false
          type: integer
        - name: startDate
          in: query
          description: start date
          required: false
          type: string
          format: date
        - name: endDate
          in: query
          description: end date
          required: false
          type: string
          format: date
      responses:
        200:
          description: plans for this users
          schema:
            type: array
            items:
              $ref: '#/definitions/PlanListItem'
        500:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Plan
      summary: Creates a new plan
      parameters:
        - name: body
          in: body
          description: add new plan
          required: true
          schema:
            $ref: '#/definitions/Plan'
      responses:
        200:
          description: Plan response
          schema:
            $ref: '#/definitions/Plan'
        500:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /plans/{id}:
    get:
      tags:
        - Plan
      summary: Find plan by id
      parameters:
        - name: id
          in: path
          description: ID of plan to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: plan response
          schema:
            $ref: '#/definitions/Plan'
        500:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Plan
      summary: Update an existing plan
      parameters:
      - name: id
        in: path
        description: ID of plan to fetch
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Plan object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Plan'
      responses:
        200:
          description: Update success
          
        404:
          description: Plan not found
    delete:
      tags:
        - Plan
      summary: deletes a plan based on the ID supplied
      parameters:
        - name: id
          in: path
          description: ID of plan to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: plan deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /routing/findtheway:
    post:
      tags:
      - Routing
      summary: find the way
      parameters:
        - in: body
          name: body
          description: |
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/LatLng'
      responses:
        200:
          description: success
          schema:
            properties:
              geoJson:
                type: string
definitions:
  Plan:
    required: 
      - name
      - planType
      - recurrent
      - subCategoryId
      - startDate
      - endDate
    properties:
      planId: 
        type: integer
        format: int32
      name:
        type: string
      planType:
        description: | 
          'daily', 'weekly', 'monthly'
        type: string
      recurrent:
        type: object
        properties:
          day:
            type: integer
          numberOfWeek:
            type: integer
          weekday:
            description: |
              ['sun','mon','tue','wed','thu','fri','sat']
            type: array
            items:
              type: string
          intervalMonth:
            type: integer
          intervalWeek:
            type: integer
          intervalDay:
            type: integer
      subCategoryId:
        type: integer
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      pois:
        type: array
        items:
          type: object
          properties:
            planId: 
              type: integer
              format: int32
            orderNumber:
              type: integer
              format: uint32
      ownerName:
        type: string
      mainCategoryName:
        type: string
      subCategoryName:
        type: string
  PlanListItem:
    required:
      - planId
      - isPinnedPlan
    properties:
      planId:
        type: integer
        format: uint32
      name:
        type: string
      platType:
        type: string
      isPinnedPlan:
        type: boolean
  LatLng:
    properties:
      lat:
        type: number
      lng:
        type: number
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /api/v1
schemes:
 - https
 - http